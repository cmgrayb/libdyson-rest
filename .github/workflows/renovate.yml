name: Renovate Bot (Self-hosted)

on:
  schedule:
    # Run Renovate every Monday at 6 AM UTC
    - cron: '0 6 * * 1'
  workflow_dispatch:  # Allow manual triggering
    inputs:
      dry_run:
        description: 'Dry run (no PRs created)'
        required: false
        default: false
        type: boolean
      log_level:
        description: 'Log level'
        required: false
        default: 'info'
        type: choice
        options:
          - debug
          - info
          - warn
          - error

# Grant necessary permissions for Renovate operations
permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  renovate:
    name: Self-hosted Renovate
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Self-hosted Renovate
      uses: renovatebot/github-action@v40.3.2
      with:
        # Use local token for self-hosted operation
        token: ${{ secrets.GITHUB_TOKEN }}
        # Renovate configuration
        configurationFile: renovate.json
      env:
        # Renovate environment variables for self-hosted setup
        RENOVATE_PLATFORM: github
        RENOVATE_AUTODISCOVER: false
        RENOVATE_BASE_BRANCHES: '["main"]'
        RENOVATE_GIT_AUTHOR: 'Renovate Bot <renovate@libdyson-rest.local>'

        # Override settings for manual dispatch
        RENOVATE_DRY_RUN: ${{ inputs.dry_run || false }}

        # Disable external services and reporting
        RENOVATE_DEPENDENCY_DASHBOARD_APPROVAL: false
        RENOVATE_PR_HOURLY_LIMIT: 2
        RENOVATE_PR_CONCURRENT_LIMIT: 3

        # Local-only security scanning (no external services)
        RENOVATE_OSV_VULNERABILITY_ALERTS: false

        # Self-hosted logging (no external analytics)
        LOG_LEVEL: ${{ inputs.log_level || 'info' }}

    - name: Post-Renovate validation
      if: always()
      run: |
        echo "=== Renovate Bot Self-hosted Execution Summary ==="
        echo "Timestamp: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        echo "Dry run: ${{ inputs.dry_run || false }}"
        echo "Log level: ${{ inputs.log_level || 'info' }}"
        echo ""
        echo "=== Self-hosted Configuration ==="
        echo "âœ… No external data sharing"
        echo "âœ… Local dependency scanning only"
        echo "âœ… GitHub token authentication"
        echo "âœ… Repository-contained configuration"
        echo ""
        echo "=== Next Steps ==="
        echo "1. Check for newly created Renovate PRs"
        echo "2. Review dependency dashboard issue"
        echo "3. For quality tool updates: run 'python scripts/sync_versions.py' after merge"

    - name: Create summary comment
      if: github.event_name == 'workflow_dispatch'
      uses: actions/github-script@v7
      with:
        script: |
          // Create a summary of the Renovate run for manual dispatches
          const summary = `
          ## ðŸ¤– Renovate Bot Self-hosted Execution

          **Execution Details:**
          - **Timestamp**: ${new Date().toISOString()}
          - **Dry Run**: ${{ inputs.dry_run || false }}
          - **Log Level**: ${{ inputs.log_level || 'info' }}
          - **Triggered By**: Manual dispatch

          **Self-hosted Configuration:**
          - âœ… No external reporting or analytics
          - âœ… Local dependency scanning only
          - âœ… Repository-contained configuration
          - âœ… Standard GitHub token authentication

          **What to Check:**
          1. New Renovate PRs created (if any)
          2. Dependency Dashboard issue updated
          3. Workflow logs for any errors

          **Important Reminders:**
          - For quality tool updates (black, flake8, isort, mypy, pytest): run \`python scripts/sync_versions.py\` after merging
          - Review security-labeled PRs with higher priority
          - Major version updates have 14-day minimum release age

          ---
          _Self-hosted Renovate execution completed - no external data shared_
          `;

          console.log(summary);

  # Notification job for quality tool updates
  quality-tool-notification:
    name: Quality Tool Update Notifications
    runs-on: ubuntu-latest
    needs: renovate
    if: always()

    steps:
    - name: Check for quality tool PRs
      uses: actions/github-script@v7
      with:
        script: |
          // Look for recently created Renovate PRs that update quality tools
          const { data: pulls } = await github.rest.pulls.list({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            sort: 'created',
            direction: 'desc'
          });

          const qualityToolPRs = pulls.filter(pr =>
            pr.user.login.includes('renovate') &&
            (pr.labels.some(label => label.name === 'quality-tools') ||
             pr.title.toLowerCase().includes('black') ||
             pr.title.toLowerCase().includes('flake8') ||
             pr.title.toLowerCase().includes('isort') ||
             pr.title.toLowerCase().includes('mypy') ||
             pr.title.toLowerCase().includes('pytest') ||
             pr.title.toLowerCase().includes('pre-commit'))
          );

          if (qualityToolPRs.length > 0) {
            const prList = qualityToolPRs.map(pr => `- #${pr.number}: ${pr.title}`).join('\n');

            // Add comments to each quality tool PR with specific instructions
            for (const pr of qualityToolPRs) {
              const comment = `
              ## ðŸ”§ Quality Tool Update - Action Required

              This PR updates development/quality tools that require version synchronization after merging.

              ### **IMPORTANT** Required Post-Merge Steps:
              1. **Synchronize versions**:
                 \`\`\`bash
                 python scripts/sync_versions.py --verbose
                 \`\`\`

              2. **Commit any changes**:
                 \`\`\`bash
                 git add requirements-dev.txt pyproject.toml .pre-commit-config.yaml
                 git commit -m "ðŸ”§ Sync tool versions after dependency update"
                 \`\`\`

              3. **Verify everything works**:
                 \`\`\`bash
                 pre-commit run --all-files
                 python -m pytest
                 \`\`\`

              4. **Update documentation** if version numbers are mentioned in:
                 - \`.github/copilot-instructions.md\`
                 - \`README.md\`
                 - \`scripts/README.md\`

              ### Why This Matters:
              - Keeps tool versions synchronized across all configuration files
              - Prevents CI failures due to version mismatches
              - Maintains consistent development environment

              ---
              ðŸ¤– This reminder was generated automatically by the self-hosted Renovate workflow.
              `;

              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: comment
              });
            }

            console.log(`Added post-merge instructions to ${qualityToolPRs.length} quality tool PRs`);
          } else {
            console.log('No quality tool PRs found - no special instructions needed');
          }
