name: Version Synchronization Check

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - '.pre-commit-config.yaml'
      - 'requirements-dev.txt'
      - 'pyproject.toml'
      - 'scripts/sync_versions.py'
  workflow_call:  # Allow this workflow to be called by other workflows

jobs:
  version-sync-check:
    name: Version Synchronization Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt

    - name: Run version sync check (dry-run)
      run: |
        python scripts/sync_versions.py --dry-run --verbose

    - name: Verify versions are synchronized
      run: |
        # Create a temporary copy of current files
        cp .pre-commit-config.yaml .pre-commit-config.yaml.backup
        cp requirements-dev.txt requirements-dev.txt.backup
        cp pyproject.toml pyproject.toml.backup

        # Run sync and check if anything would change
        python scripts/sync_versions.py --verbose

        # Check for differences
        if ! diff -u .pre-commit-config.yaml.backup .pre-commit-config.yaml; then
          echo "[ERROR] .pre-commit-config.yaml would be modified by version sync"
          echo "Please run: python scripts/sync_versions.py"
          exit 1
        fi

        if ! diff -u requirements-dev.txt.backup requirements-dev.txt; then
          echo "[ERROR] requirements-dev.txt would be modified by version sync"
          echo "Please run: python scripts/sync_versions.py"
          exit 1
        fi

        if ! diff -u pyproject.toml.backup pyproject.toml; then
          echo "[ERROR] pyproject.toml would be modified by version sync"
          echo "Please run: python scripts/sync_versions.py"
          exit 1
        fi

        echo "[OK] All configuration files are properly synchronized"
