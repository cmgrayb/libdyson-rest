name: Renovate Post-Update Tasks

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'requirements*.txt'
      - '.pre-commit-config.yaml'
      - 'pyproject.toml'
  # Only run for Renovate PRs
  # This is identified by the renovate bot user and specific labels

# Grant necessary permissions for post-update operations
permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  renovate-post-update:
    name: Renovate Post-Update Tasks
    # Only run for PRs created by Renovate Bot
    if: github.actor == 'renovate[bot]' || contains(github.event.pull_request.labels.*.name, 'renovate')
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # Use the Renovate token to allow pushes back to the PR branch
        token: ${{ secrets.RENOVATE_TOKEN || secrets.GITHUB_TOKEN }}
        ref: ${{ github.head_ref }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt

    - name: Run version synchronization
      id: sync_versions
      run: |
        echo "Running version synchronization..."
        python scripts/sync_versions.py --verbose

        # Check if any files were modified
        if git diff --quiet; then
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "No version synchronization changes needed"
        else
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "Version synchronization made changes"
          git status --porcelain
        fi

    - name: Update pre-commit hooks
      if: contains(github.event.pull_request.title, 'pre-commit')
      run: |
        echo "Updating pre-commit hooks configuration..."
        pre-commit autoupdate

        # Run pre-commit on all files to ensure compatibility
        pre-commit run --all-files || true

    - name: Commit and push changes
      if: steps.sync_versions.outputs.changed == 'true'
      run: |
        git config --local user.email "renovate[bot]@users.noreply.github.com"
        git config --local user.name "renovate[bot]"

        git add -A
        git commit -m "chore: sync tool versions after dependency update

        - Updated configuration files to maintain version consistency
        - Automated by renovate post-update workflow"

        git push

    - name: Add PR comment about changes
      if: steps.sync_versions.outputs.changed == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const comment = `
          ## ðŸ¤– Renovate Post-Update Tasks Completed

          This PR was automatically updated with additional changes:

          ### Changes Made
          - âœ… Version synchronization completed
          - âœ… Configuration files updated for consistency
          ${context.payload.pull_request.title.includes('pre-commit') ? '- âœ… Pre-commit hooks updated' : ''}

          ### Files Modified
          - \`requirements-dev.txt\` (if needed)
          - \`pyproject.toml\` (if needed)
          - \`.pre-commit-config.yaml\` (if pre-commit update)

          These changes ensure all development tools remain synchronized with the dependency updates.

          ---
          _This comment was generated by the Renovate post-update workflow._
          `;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
